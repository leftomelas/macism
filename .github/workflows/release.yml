name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build on ${{ matrix.os }} for ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            artifact_name: macism-x86_64
            asset_name: macism-x86_64
            arch: x86_64
          - os: macos-latest
            artifact_name: macism-arm64
            asset_name: macism-arm64
            arch: arm64
          - os: macos-latest
            artifact_name: TemporaryWindow-x86_64.zip
            asset_name: TemporaryWindow-x86_64
            arch: x86_64
          - os: macos-latest
            artifact_name: TemporaryWindow-arm64.zip
            asset_name: TemporaryWindow-arm64
            arch: arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build
        run: |
          target=""
          if [[ "${{ matrix.arch }}" == "x86_64" ]]; then
            export target="x86_64"
          else
            export target="aarch64"
          fi
          make all SWIFTC="swiftc -target ${target}-apple-macos11"
          mv macism macism-${{ matrix.arch }}
          zip -r TemporaryWindow-${{ matrix.arch }}.zip TemporaryWindow.app

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.artifact_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.RELEASE_TOKEN }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            macism-x86_64/macism-x86_64
            macism-arm64/macism-arm64
            # TemporaryWindow-x86_64/TemporaryWindow-x86_64.zip
            # TemporaryWindow-arm64/TemporaryWindow-arm64.zip
